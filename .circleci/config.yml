version: 2.1
jobs:
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Execute bucket.yml - Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
            --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
      - run: aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_ID:0:7} --exclude="*" --include="*.html" --delete
  
  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Execute cloudfront.yml
          command: |
            aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name production-distro \
            --parameter-overrides PipelineID="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"

  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Make workspace folder
          command: mkdir -p /workspace
          
      - run: yum install -y tar gzip

      - run:  
          name: Get all bucket , sort according to the creation date , get the oldest bucket name
          command: |
            aws s3 ls | grep "mybucket-*" > all_bucket.txt 
            sort -k 2 all_bucket.txt -o all_bucket.txt

      - run:
          name: Check if there are new bucket for production or not      
          command: |
            if [ $(wc -l < all_bucket.txt)  == 2 ]; \
            then \
              sed -n '1p' all_bucket.txt > /workspace/old_bucket.txt; \
            fi

      - persist_to_workspace:
          root: /workspace
          paths: 
            - old_bucket.txt

  clean_up:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
          
      - run:
          name: Destroy the previous S3 bucket and CloudFormation stack. 
          command: |
            if [ -z "$OldBucketID" ]; \
            then \
            aws s3 rm "s3://${OldBucketID}" --recursive; \
            fi

      - run:
          name: Delete old S3 bucket     
          command: |
            if [ -z "$OldBucketID" ]; \
            then \
            aws s3api delete-bucket --bucket OldBucketID;\
            fi

workflows:
  my_workflow:
    jobs:
      - create_and_deploy_front_end
      - promote_to_production:
          requires: 
            - create_and_deploy_front_end
      - get_last_deployment_id:
          requires:
            - create_and_deploy_front_end
      - clean_up:
          requires:
            - promote_to_production
            - get_last_deployment_id
          pre-steps:
            - run: yum install -y tar gzip

            - attach_workspace:
                at: /workspace
            
            - run:
                name: Export old bucket name
                command: |
                  export OldBucketID=$(awk -F' ' '{print $3}' < /workspace/old_bucket.txt)                  